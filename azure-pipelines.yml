# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master
- release
- fix-*
- pr-*

schedules:
  - cron: "0 0 1 * *"
    displayName: Monthly midnight build
    branches:
      include:
        - master
    always: true

pool:
  vmImage: 'windows-2022'

variables:
  solution: '**/PdfSharp.Xps.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    version: '3.1.x'

- task: UseDotNet@2
  inputs:
    version: '6.x'

- checkout: self
  submodules: true

- task: UseDotNet@2
  inputs:
    version: '3.1.x'

- task: DotNetCoreCLI@2
  displayName: 'build'
  inputs:
    command: 'build'
    projects: |
      $(solution)
    arguments: '-c $(buildConfiguration) /p:Platform="$(buildPlatform)"'
    includeNuGetOrg: true
    noCache: true

- task: DotNetCoreCLI@2
  displayName: 'test'
  inputs:
    command: 'test'
    projects: |
      **/PDFsharpTests-GDI.sln
      **/PDFsharpTests-WPF.sln
      **/PdfSharp.Xps.UnitTests/PdfSharp-XPS.sln
    arguments: '-c $(buildConfiguration) /p:Platform="$(buildPlatform)"'
    includeNuGetOrg: true
    noCache: true

- task: DotNetCoreCLI@2
  displayName: 'pack'
  inputs:
    command: 'pack'
    configuration: '$(buildConfiguration)'
    nobuild: true
    feedsToUse: 'select'
    packagesToPack: '**/PdfSharp.csproj;**/PdfSharp-WPF.csproj;**/PdfSharp.Xps.csproj'
    versioningScheme: 'off'
    includeNuGetOrg: true
    noCache: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'nupkg'
    publishLocation: 'Container'
